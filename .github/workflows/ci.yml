name: CI

on:
  push:
    branches:
      - main
      - fj_2024_lesson_13
  pull_request:
    branches:
      - main
      - fj_2024_lesson_13

jobs:

  build:
    permissions:
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Setup Testcontainers Cloud Client
        uses: atomicjar/testcontainers-cloud-setup-action@v1
        with:
          token: ${{ secrets.TC_CLOUD_TOKEN }}

      - name: Run Coverage
        run: |
          chmod +x gradlew
          ./gradlew jacocoTestReport

      - name: Check if Jacoco report exists
        run: |
            ls -R build/reports/jacoco

      - name: Upload Jacoco Coverage Report
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/index.html
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 75
          min-coverage-changed-files: 30
          title: Code Coverage
          update-comment: true

      - name: Run static code analysis
        run: ./gradlew check

      - name: Archive Jar
        uses: actions/upload-artifact@v3
        with:
          name: built-jar
          path: build/libs/*.jar

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Jar Artifact
        uses: actions/download-artifact@v3
        with:
          name: built-jar

      - name: List contents of the workspace
        run: ls -la

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/therenegadee/fintech-2024:latest
          cache-from: type=local,src=${{ github.workspace }}/.build-cache
          cache-to: type=local,dest=${{ github.workspace }}/.build-cache,mode=max